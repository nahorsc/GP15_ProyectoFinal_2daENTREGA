package Vista;

import Modelo.Pelicula;
import Persistencia.PeliculaData;
import com.toedter.calendar.JDateChooser;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

public class VistaPelicula extends javax.swing.JFrame {

    private PeliculaData peliculaData;

    /**
     * Creates new form VistaPelicula
     */
    public VistaPelicula() {
        initComponents();
        fechaSeleccionada.setMinSelectableDate(new java.util.GregorianCalendar(2000, Calendar.JANUARY, 1).getTime());
        fechaSeleccionada.setMaxSelectableDate(new java.util.Date());

        cbGenero.setModel(new javax.swing.DefaultComboBoxModel<>(
                new String[]{"Acción", "Comedia", "Drama", "Ciencia Ficción", "Terror", "Romance", "Animación"}
        ));
        peliculaData = new PeliculaData();
        configurarTabla();

        jtPeliculas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int fila = jtPeliculas.getSelectedRow();
                if (fila >= 0) {
                    cargarDatosDesdeTabla(fila);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        bttAgg = new javax.swing.JButton();
        bttUpdate = new javax.swing.JButton();
        bttDelete = new javax.swing.JButton();
        rbDisponible = new javax.swing.JRadioButton();
        rbNodisponible = new javax.swing.JRadioButton();
        fechaSeleccionada = new com.toedter.calendar.JDateChooser();
        txtTitulo = new javax.swing.JTextField();
        txtDirector = new javax.swing.JTextField();
        txtActores = new javax.swing.JTextField();
        txtorigen = new javax.swing.JTextField();
        cbGenero = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        bttBuscar = new javax.swing.JButton();
        bttListar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtPeliculas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setMinimumSize(new java.awt.Dimension(746, 696));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Titulo");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Director");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Actores");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Origen");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("genero");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Estreno");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("En cartelera");

        bttAgg.setText("Agregar");
        bttAgg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttAggActionPerformed(evt);
            }
        });

        bttUpdate.setText("Actualizar");
        bttUpdate.setPreferredSize(new java.awt.Dimension(72, 23));
        bttUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttUpdateActionPerformed(evt);
            }
        });

        bttDelete.setText("Eliminar");
        bttDelete.setPreferredSize(new java.awt.Dimension(72, 23));
        bttDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttDeleteActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbDisponible);
        rbDisponible.setText("Disponible");

        buttonGroup1.add(rbNodisponible);
        rbNodisponible.setText("Fuera de cartelera");

        cbGenero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Control de peliculas");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("ID");

        bttBuscar.setText("Buscar");
        bttBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttBuscarActionPerformed(evt);
            }
        });

        bttListar.setText("Listar");
        bttListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttListarActionPerformed(evt);
            }
        });

        jtPeliculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtPeliculas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtActores)
                            .addComponent(txtDirector)
                            .addComponent(txtTitulo)
                            .addComponent(txtID)
                            .addComponent(txtorigen)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fechaSeleccionada, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(rbDisponible, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbNodisponible, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cbGenero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(329, 329, 329))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(bttAgg)
                                .addGap(33, 33, 33)
                                .addComponent(bttBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(bttUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bttListar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(bttDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtActores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtorigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(fechaSeleccionada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(rbDisponible)
                    .addComponent(rbNodisponible))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttAgg, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttListar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(143, 143, 143))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 649, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttUpdateActionPerformed
        if (txtID.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un ID para actualizar");
            return;
        }

        try {
            Integer.parseInt(txtID.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID debe ser un numero valido");
            return;
        }

        if (txtTitulo.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El título es obligatorio");
            return;
        }

        if (txtDirector.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El director es obligatorio");
            return;
        }

        if (txtActores.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Los actores son obligatorios");
            return;
        }

        if (txtorigen.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El origen es obligatorio");
            return;
        }

        if (cbGenero.getSelectedItem() == null || cbGenero.getSelectedItem().toString().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un género");
            return;
        }

        if (fechaSeleccionada.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fecha de estreno");
            return;
        }

        if (!rbDisponible.isSelected() && !rbNodisponible.isSelected()) {
            JOptionPane.showMessageDialog(this, "Debe indicar si está en cartelera o no");
            return;
        }

        Pelicula p = new Pelicula();
        p.setIdPelicula(Integer.parseInt(txtID.getText().trim()));
        p.setTitulo(txtTitulo.getText().trim());
        p.setDirector(txtDirector.getText().trim());
        p.setActores(txtActores.getText().trim());
        p.setOrigen(txtorigen.getText().trim());
        p.setGenero(cbGenero.getSelectedItem().toString());
        p.setEstreno(fechaSeleccionada.getDate());
        p.setEnCartelera(rbDisponible.isSelected());

        peliculaData.actualizarPelicula(p);
        JOptionPane.showMessageDialog(this, "Película Actualizada Correctamente");
    }//GEN-LAST:event_bttUpdateActionPerformed

    private void bttAggActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttAggActionPerformed
        if (txtTitulo.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El título es obligatorio");
            return;
        }

        if (txtDirector.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El director es obligatorio");
            return;
        }

        if (txtActores.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Los actores son obligatorios");
            return;
        }

        if (txtorigen.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "El origen es obligatorio");
            return;
        }

        if (cbGenero.getSelectedItem() == null || cbGenero.getSelectedItem().toString().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un género");
            return;
        }

        if (fechaSeleccionada.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fecha de estreno");
            return;
        }

        if (!rbDisponible.isSelected() && !rbNodisponible.isSelected()) {
            JOptionPane.showMessageDialog(this, "Debe indicar si está en cartelera o no");
            return;
        }

        Pelicula p = new Pelicula();
        p.setTitulo(txtTitulo.getText().trim());
        p.setDirector(txtDirector.getText().trim());
        p.setActores(txtActores.getText().trim());
        p.setOrigen(txtorigen.getText().trim());
        p.setGenero(cbGenero.getSelectedItem().toString());
        p.setEstreno(fechaSeleccionada.getDate());
        p.setEnCartelera(rbDisponible.isSelected());

        peliculaData.guardarPelicula(p);
        JOptionPane.showMessageDialog(this, "Pelicula Agregada Correctamente");

        
    }//GEN-LAST:event_bttAggActionPerformed

    private void configurarTabla() {

        String[] columnas = {"ID", "Título", "Director", "Actores", "Origen", "Género", "Estreno", "En Cartelera"};

        javax.swing.table.DefaultTableModel modelo = new javax.swing.table.DefaultTableModel(columnas, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        jtPeliculas.setModel(modelo);
    }

    private void bttDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttDeleteActionPerformed
        if (txtID.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un ID para eliminar");
            return;
        }

        int id;
        try {
            id = Integer.parseInt(txtID.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID debe ser un número válido");
            return;
        }

        int confirmar = JOptionPane.showConfirmDialog(this, "¿Está seguro que desea eliminar esta película?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);

        if (confirmar == JOptionPane.YES_OPTION) {
            peliculaData.eliminarPelicula(id);
            JOptionPane.showMessageDialog(this, "Película Eliminada Correctamente");
        }
    }//GEN-LAST:event_bttDeleteActionPerformed

    private void cargarDatosDesdeTabla(int fila) {
        javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel) jtPeliculas.getModel();

        txtID.setText(modelo.getValueAt(fila, 0).toString());
        txtTitulo.setText(modelo.getValueAt(fila, 1).toString());
        txtDirector.setText(modelo.getValueAt(fila, 2).toString());
        txtActores.setText(modelo.getValueAt(fila, 3).toString());
        txtorigen.setText(modelo.getValueAt(fila, 4).toString());
        cbGenero.setSelectedItem(modelo.getValueAt(fila, 5).toString());
        fechaSeleccionada.setDate((Date) modelo.getValueAt(fila, 6));

        String enCartelera = modelo.getValueAt(fila, 7).toString();
        rbDisponible.setSelected(enCartelera.equals("Sí"));
    }

    private void bttBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttBuscarActionPerformed
        if (txtID.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un ID para buscar");
            return;
        }

        int id;
        try {
            id = Integer.parseInt(txtID.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El ID debe ser un número válido");
            return;
        }

        Pelicula p = peliculaData.buscarPelicula(id);

        if (p != null) {
            txtTitulo.setText(p.getTitulo());
            txtDirector.setText(p.getDirector());
            txtActores.setText(p.getActores());
            txtorigen.setText(p.getOrigen());
            cbGenero.setSelectedItem(p.getGenero());
            fechaSeleccionada.setDate(p.getEstreno());
            rbDisponible.setSelected(p.isEnCartelera());
            rbNodisponible.setSelected(!p.isEnCartelera());
            JOptionPane.showMessageDialog(this, "Película encontrada");
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró película con ese ID");
        }
    }//GEN-LAST:event_bttBuscarActionPerformed

    private void bttListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttListarActionPerformed
        try {
            javax.swing.table.DefaultTableModel modelo = (javax.swing.table.DefaultTableModel) jtPeliculas.getModel();
            modelo.setRowCount(0);

            List<Pelicula> peliculas = peliculaData.listarPeliculas();

            if (peliculas.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No hay películas registradas");
                return;
            }

            for (Pelicula p : peliculas) {
                Object[] fila = {
                    p.getIdPelicula(),
                    p.getTitulo(),
                    p.getDirector(),
                    p.getActores(),
                    p.getOrigen(),
                    p.getGenero(),
                    p.getEstreno(),
                    p.isEnCartelera() ? "Sí" : "No"
                };
                modelo.addRow(fila);
            }

            JOptionPane.showMessageDialog(this, "Se listaron " + peliculas.size() + " películas");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al listar: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_bttListarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaPelicula().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttAgg;
    private javax.swing.JButton bttBuscar;
    private javax.swing.JButton bttDelete;
    private javax.swing.JButton bttListar;
    private javax.swing.JButton bttUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbGenero;
    private com.toedter.calendar.JDateChooser fechaSeleccionada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtPeliculas;
    private javax.swing.JRadioButton rbDisponible;
    private javax.swing.JRadioButton rbNodisponible;
    private javax.swing.JTextField txtActores;
    private javax.swing.JTextField txtDirector;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtTitulo;
    private javax.swing.JTextField txtorigen;
    // End of variables declaration//GEN-END:variables
}
